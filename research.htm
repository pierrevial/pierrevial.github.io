<!DOCTYPE html>

<html lang="en">

<head>
<meta charset="utf-8">

<title>Research page of Pierre Vial</title>
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="author" content="Pierre Vial">
 <meta name="viewport" content="width=device-width, initial-scale=1.0">
<link href="css/bootstrap.min.css" rel="stylesheet" media="screen">
<link href="css/bootstrap-theme.min.css" rel="stylesheet">
<link href="theme.css" rel="stylesheet">
</head>

  <body role="document">

    <nav class="navbar navbar-inverse navbar-fixed-top" role="navigation">
      <div class="container">
        <div class="navbar-header">
          <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand" href="index.htm">Pierre Vial</a>
        </div>
        <div id="navbar" class="navbar-collapse collapse">
        <ul class="nav navbar-nav">
	   <li><a href="index.htm">Main</a></li>
<li><a href="teaching.htm">Teaching</a></li>
<li class="active"><a href="research.htm">Research</a></li>
<li><a href="talks.htm">Talks</a></li>
<li><a href="defense.htm">PhD Defense</a></li>
<!--
<li class="dropdown">
              <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">Talks <span class="caret"></span></a>
              <ul class="dropdown-menu" role="menu">
                <li><a href="talks_date.htm">By date</a></li>
				<li class="divider"></li>
                <li class="dropdown-header">By theme</li>
                <li><a href="talks_theme_semverif.htm">Semantics and Verification</a></li>
                <li><a href="talks_theme_combi.htm">Combinatorics of words</a></li>
              </ul>
            </li>
<li><a href="gdt.htm">Working group on Semantics and Verification</a></li> -->
          </ul>
        </div><!--/.nav-collapse -->
      </div>
    </nav>

<div class="container theme-showcase" role="main">

<div class="page-header"></br>
<h1>Publications</h1>
</div>

<ul style="float:left">


  <li><a href="kesner-vial-exact-lmu.pdf"><b> Persistent and Consuming Types for Classical Logic [LiCS'20]</b></a> (joint work with <a href="https://www.irif.fr/~kesner/">Delia Kesner</a>)<br> We use a <i>non-idempotent</i> intersection and <i>union</i> type system to capture exact measures of evaluation in the λμ-calculus. These exact measures correspond to the <i>number of evaluation steps</i> needed to obtain the normal form, and the <i>size of this normal form</i>. The λμ-calculus is a computational interpretation of <i>classical</i> natural deduction. We improve and extend previous works giving exact measures in the λ-calculus. Three evalutation strategies are considered: the head, the leftmost-outermost and the maximal strategies, the last one computing a longest reduction sequence and being associated to strong normalization.
There is a <a href="talks.htm">video</a> of the talk.<br>
  </li>
  <br><br>


<li> <a href="hp-pvial.pdf"><b> Sequence Types for Hereditary Permutators [FSCD'19]</b></a><br> The invertible terms in Scott’s model  are known as the hereditary permutators. Equivalently, they are terms which are invertible up to βη-conversion with r spect to the composition of the λ-terms. Finding a type-theoretic characterizat on to the set of hereditary permutators was problem # 20 of TLCA list of problems. In 2008, Tatsuta proved that this was not possible with an inductive type system. Building on previous work, we use an infinitary intersection type system b sed on sequences (i.e., families of types indexed by integers) to characterize  ereditary permutators with a unique type. This gives a positive answer to the problem in the coinductive case.</li><br><br>
<!-- <a href="hp-pvial.pdf"><b>Sequence types for hereditary permutators</b></a>. Using an extension of system S, we characterize the set of hereditary permutators with a unique type. This gives a positive answer to <a href="http://tlca.di.unito.it/opltlca/">Problem 20 of TLCA</a> in the coinductive case.<br><br>
-->

<li> <a href="kesner-vial-upper-bound-lmu-lmcs.pdf"><b>Non-Idempotent Types for Classical Calculi in Natural Deduction Style [LMCS, with Delia Kesner]</b></a><br>
We define two resource aware typing systems for the λμ-calculus based on non-idempotent intersection and union types. The non-idempotent approach provides very simple combinatorial arguments to characterize head and strongly normalizing terms. Moreover, typability provides upper bounds for the lengths of the head-reduction and the maximal reduction sequences to normal form.<br>
In the second part of this paper, the λμ-calculus is refined to a small-step calculus called λμs , which is inspired by the substitution at a distance paradigm. The λμs-calculus turns out to be compatible with a natural extension of the non-idempotent interpretations of λμ, i.e., λμs -reduction preserves and decreases typing derivations in an extended appropriate typing system. We thus derive a simple arithmetical characterization of strongly λμs -normalizing terms by means of typing.</li><br><br>



    
<li> <a href="infinitary-relational-model-pvial.pdf"><b> Every term is meaningful in the infinitary relation model [LiCS'18]</b></a><br>Infinite types and formulas are known to have really curious and unsound behaviors. For instance, they allow to type Omega, the auto-autoapplication and they thus do not ensure any form of normalization/productivity. Moreover, in most infinitary frameworks, it is not difficult to define a type R that can be assigned to every lambda-term. However, these observations do not say much about what coinductive (i.e. infinitary) type grammars are able to provide: it is for instance very difficult to know what types (besides $R$) can be assigned to a given term in this setting. We begin with a discussion on the expressivity of different forms of infinite types.
%We see that the non-idempotent intersection types, whose resource-awareness makes them the good framework to study infinitary typing. 
Then, using the resource-awareness of sequential intersection types (system S) and tracking, we prove that infinite types are able to characterize the arity of every lambda-term and that, in the infinitary extension of the relational model, every term has a ``meaning'' i.e. a non-empty denotation. From the technical point of view, we must deal with the total lack of guarantee of productivity for typable terms: we do so by importing methods inspired by first order model theory.</li><br><br>


  
<li> <a href="intersection-types-mazza-pellissier-vial.pdf"><b> Polyadic Approximations, Fibrations and Intersection Types [POPL'18, with Damiano Mazza and Luc Pellissier]</b></a>: <br>
  Starting from an exact correspondence between linear approximations and non-idempotent intersection types, we develop a general framework for building systems of intersection types characterizing normalization properties. We show how this construction, which uses in a fundamental way Melliès and Zeilberger’s “type systems as functors” viewpoint, allows us to recover equivalent versions of every well known intersection type system (including Coppo and Dezani’s original system, as well as its non-idempotent variants independently introduced by Gardner and de Carvalho). We also show how new systems of intersection types may be built almost automatically in this way.
</li><br><br>



  <li> <a href="lmu17-short-kesner-vial.pdf"><b> Types as Resources for Classical Natural Deduction [FSCD'17, with Delia Kesner]</b></a>:
    <br>
 <i>Abstract:</i> We define two resource aware typing systems for the λ μ -calculus based on non-idempotent intersection and union types. The non-idempotent approach provides very simple combinatorial arguments - based on decreasing measures of type derivations– to characterize head and strongly normalizing terms. Moreover, typability provides upper bounds for the length of head-reduction sequences and maximal reduction sequences.<br>
 A longer version of this paper is available on Delia's page.
    </li> <br><br>

  <li><a href="klopQ-vial.pdf"><b> Infinitary Intersection Types as Sequences: a New Answer to Klop's Question [LICS'17]</b></a>:
 <a href="klopQ-short-vial.pdf">short (05.10.2017)</a> and <a href="klopQ-vial.pdf">long (05.03.2017)</a> versions.<br>
<i>Abstract:</i> We use infinite sequences to represent intersection and define a coinductive intersection type sytem that characterizes the set of weakly normalizing terms of an infinitary calculus. A finite term is normalizing in this calculus if its Böhm tree does not hold bottom.
  </li><br><br>


  </ul>
<br><br>

<!--
<div class="page-header"></br>
<h1>Accepted</h1>
</div>

<ul style="float:left">

  <li>
   
  </li>  
</ul>
-->

<div class="page-header"></br>
<h1>Preprints</h1>
</div>

<ul style="float:left">
  <li> <a href="https://arxiv.org/abs/2204.02643"><b>Modular pre-processing for automated reasoning in dependent type theory</b></a>, with <a href="https://valentinblot.org/pro/">V. Blot</a>, D. Cousineau, Enzo Crance, L. Dubois de Prisque, <a href="https://www.lri.fr/~keller/">C. Keller</a>, <a href="http://people.rennes.inria.fr/Assia.Mahboubi/">A. Mahboubi</a>. <br>
<i>Abstract</i>: The power of modern automated theorem provers can be put at the service of interactive theorem proving. But this requires in particular bridging the expressivity gap between the logics these provers are respectively based on. This paper presents the implementation of a modular suite of pre-processing transformations, which incrementally bring certain formulas expressed in the Calculus of Inductive Constructions closer to the first-order logic of Satifiability Modulo Theory solvers. These transformations address issues related to the axiomatization of inductive types, to polymorphic definitions or to the different implementations of a same theory signature. This suite is implemented as a plugin for the Coq proof assistant, and integrated to the SMTCoq toolchain.<br><br>
    
  <li><a href="https://arxiv.org/pdf/2102.07515.pdf"><b>Sequences and infinitary intersection types</b></a>.
We introduce a new representation of non-idempotent intersection types, using sequences (families indexed with natural numbers) instead of lists or multisets. This allows scaling up intersection type theory to the infinitary λ-calculus.
    We thus characterize hereditary head normalization<!--, which gives a positive answer to a question known as Klop’s Problem-->. 
    On our way, we use non-idempotent
intersection to retrieve some well-known results on infinitary terms.
    <br><br>

   
  <li><a href="surj-coll-vial.pdf"><b>Reduction paths without permutations, or the expressive power of sequence types </b></a> (outdated <a href="surj-collapse-vial.pdf">long (05.10.2017)</a> version here).  <br>
<i>Abstract:</i>  The derivations of System S, whose intersection types are sequential, naturally collapses on R, the coinductive version of Gardner/de Carvalho's quantitive type system, featuring multisets as intersection type. We prove that this collapse is surjective : every derivation of R is the collapse of a derivation of S and we prove that we can capture every reduction path.</li><br><br>
</ul></br></br>
  
<!--
<div class="page-header"></br> 
<h1>Thesis</h1>
</div>

<ul style="float:left">
<li><a> Etudes des automates en Ludique, Master thesis.</a></li>
</ul>

<div class="page-header"></br>
<h1>Talks</h1>
</div>

<ul style="float:left">
<li><a href="SHONAN15-Slides.pdf"> On the proof theory of circular proofs, Shonan Meeting 2015 (HOMC), Tokyo. </a></li> 
<li><a href="CSL15-Slides.pdf"> Least and greatest fixed points in Ludics, CSL 2015, Berlin.</a></li>
<li><a href="FOSSACS15-Slides.pdf"> On the meaning of logical dependencies, FoSSaCS 2015, London.</a></li> 
</ul></br>

</div> -->

</body>

</html>
